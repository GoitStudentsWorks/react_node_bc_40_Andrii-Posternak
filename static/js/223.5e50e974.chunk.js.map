{"version":3,"file":"static/js/223.5e50e974.chunk.js","mappings":"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","sources":["webpack://slim-mom-frontend/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","webpack://slim-mom-frontend/./src/components/DailyCaloriesForm/DailyCaloriesForm.module.scss?c79a","services/dailyCalorieApi.js","redux/dailyCalorie/dailyCalorieOperations.js","components/DailyCaloriesForm/DailyCaloriesForm.jsx","webpack://slim-mom-frontend/./src/components/RightSideBar/RightSideBar.module.scss?519c","components/RightSideBar/RightSideBar.jsx","helpers/validation/loginSchema.js","helpers/validation/registerSchema.js","helpers/validation/calorieSchema.js","helpers/validation/newProductSchema.js","pages/CalculatorPage/CalculatorPage.jsx","webpack://slim-mom-frontend/./src/pages/CalculatorPage/CalculatorPage.module.scss?5abd"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__JBBzO\",\"active\":\"Button_active__iTrrO Button_button__JBBzO\",\"primary\":\"Button_primary__9MLUH Button_button__JBBzO\",\"disable\":\"Button_disable__AF92d Button_button__JBBzO\",\"small\":\"Button_small__jToKs\",\"large\":\"Button_large__cizxk\"};","import clsx from 'clsx';\n\nimport styles from './Button.module.scss';\n\nexport const Button = ({\n  size = 'small',\n  mainStyle,\n  type,\n  disabled = false,\n  children,\n  handleClick,\n}) => {\n  return (\n    <button\n      disabled={disabled}\n      type={type}\n      onClick={handleClick}\n      className={clsx(styles[size], styles[mainStyle])}\n    >\n      {children}\n    </button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"caloriesForm\":\"DailyCaloriesForm_caloriesForm__CjEzo\",\"caloriesPadding\":\"DailyCaloriesForm_caloriesPadding__l6bi1\",\"labelText\":\"DailyCaloriesForm_labelText__G+pBd\",\"labelContainer\":\"DailyCaloriesForm_labelContainer__lo97o\",\"formContainerF\":\"DailyCaloriesForm_formContainerF__z+3qH\",\"formContainerS\":\"DailyCaloriesForm_formContainerS__-eZFl\",\"caloriesFormErrorContainer\":\"DailyCaloriesForm_caloriesFormErrorContainer__BGDXs\",\"caloriesFormError\":\"DailyCaloriesForm_caloriesFormError__h-xJl\",\"radioButtonContainer\":\"DailyCaloriesForm_radioButtonContainer__91ucI\",\"radioButtonList\":\"DailyCaloriesForm_radioButtonList__iE1rE\",\"check\":\"DailyCaloriesForm_check__JP1e-\",\"form_button\":\"DailyCaloriesForm_form_button__+DDQQ\",\"formContainerMain\":\"DailyCaloriesForm_formContainerMain__+kjzo\",\"formContainerLeft\":\"DailyCaloriesForm_formContainerLeft__kDDqU\",\"formContainerRight\":\"DailyCaloriesForm_formContainerRight__r2vV7\",\"radioButton\":\"DailyCaloriesForm_radioButton__LfytD\"};","import axios from 'axios';\n\nexport const getCalorieAuthApi = async calcParams => {\n  const response = await axios.post('/calories/auth', calcParams);\n  return response.data;\n};\n\nexport const getCalorieApi = async calcParams => {\n  const response = await axios.post('/calories', calcParams);\n  return response.data;\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { getCalorieAuthApi, getCalorieApi } from 'services/dailyCalorieApi';\n\nexport const getCalorieAuth = createAsyncThunk(\n  'calorie/getCalorieAuth',\n  async (calcParams, thunkAPI) => {\n    try {\n      const result = await getCalorieAuthApi(calcParams);\n\n      return result;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const getCalorie = createAsyncThunk(\n  'calorie/getCalorie',\n  async (calcParams, thunkAPI) => {\n    try {\n      const result = await getCalorieApi(calcParams);\n\n      return result;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n","import { Formik, Form, Field } from 'formik';\nimport { PersistFormikValues } from 'formik-persist-values';\n\nimport styles from './DailyCaloriesForm.module.scss';\nimport { calorieSchema } from 'helpers/validation';\nimport { Button } from 'components/Button/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAuthStatus } from 'redux/auth/authSlice';\nimport { getCalorie } from 'redux/dailyCalorie/dailyCalorieOperations';\nimport { getCalorieAuth } from 'redux/dailyCalorie/dailyCalorieOperations';\nimport { useNavigate } from 'react-router-dom';\nimport { routes } from 'utils/routes';\n\nexport const DailyCaloriesForm = ({ handleModalOpen }) => {\n  const InputField = ({ label, type, value, name, onChange, onBlur }) => (\n    <label>\n      <Field\n        required\n        type={type}\n        value={value}\n        name={name}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n      <div className={styles.labelText}>{label}</div>\n    </label>\n  );\n\n  const RadioButton = ({ name, value, id, onChange, onBlur }) => (\n    <li>\n      <Field\n        type=\"radio\"\n        value={value}\n        name={name}\n        id={id}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n      <label htmlFor={id}>{value}</label>\n      <div className={styles.check}>\n        <div className={styles.inside}></div>\n      </div>\n    </li>\n  );\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const authStatus = useSelector(selectAuthStatus);\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          height: '',\n          age: '',\n          currentWeight: '',\n          desiredWeight: '',\n          bloodType: '',\n        }}\n        validateOnBlur\n        validationSchema={calorieSchema}\n        onSubmit={(values, actions) => {\n          const bloodType = +values.bloodType;\n          const allValue = { ...values, bloodType };\n\n          if (authStatus) {\n            dispatch(getCalorieAuth(allValue));\n            navigate(routes.diary);\n          } else {\n            dispatch(getCalorie(allValue));\n            handleModalOpen();\n          }\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => (\n          <Form\n            className={\n              authStatus\n                ? styles.caloriesForm\n                : `${styles.caloriesForm} ${styles.caloriesPadding}`\n            }\n            onSubmit={handleSubmit}\n          >\n            <h1>Calculate your daily calorie intake right now</h1>\n            <div className={styles.formContainerMain}>\n              <div className={styles.formContainerLeft}>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Height *\"\n                    type=\"text\"\n                    name={'height'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.height}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.height && errors.height && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.height}\n                      </p>\n                    )}\n                  </div>\n                </div>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Age *\"\n                    type=\"text\"\n                    name={'age'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.age}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.age && errors.age && (\n                      <p className={styles.caloriesFormError}>{errors.age}</p>\n                    )}\n                  </div>\n                </div>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Current weight *\"\n                    type=\"text\"\n                    name={'currentWeight'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.currentWeight}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.currentWeight && errors.currentWeight && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.currentWeight}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className={styles.formContainerRight}>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Desired weight *\"\n                    type=\"text\"\n                    name={'desiredWeight'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.desiredWeight}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.desiredWeight && errors.desiredWeight && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.desiredWeight}\n                      </p>\n                    )}\n                  </div>\n                </div>\n                <div className={styles.radioButtonContainer}>\n                  <h3>Blood type *</h3>\n\n                  <ul className={styles.radioButtonList}>\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"1\"\n                      id=\"1-radio-button\"\n                    />\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"2\"\n                      id=\"2-radio-button\"\n                    />\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"3\"\n                      id=\"3-radio-button\"\n                    />\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"4\"\n                      id=\"4-radio-button\"\n                    />\n                  </ul>\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.bloodType && errors.bloodType && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.bloodType}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className={styles.form_button}>\n              <Button size={'large'} mainStyle={'active'} type={'submit'}>\n                Start losing weight\n              </Button>\n            </div>\n\n            <PersistFormikValues name=\"calc-form\" />\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"blockWrapper\":\"RightSideBar_blockWrapper__4AK5p\",\"heading\":\"RightSideBar_heading__uDkBd\",\"list\":\"RightSideBar_list__sE6t3\",\"foodList\":\"RightSideBar_foodList__O7WPt RightSideBar_list__sE6t3\",\"calorieItem\":\"RightSideBar_calorieItem__ceArC\",\"warning\":\"RightSideBar_warning__gqcj-\",\"norm\":\"RightSideBar_norm__C-bla\"};","import { useSelector } from 'react-redux';\nimport {\n  selectCalorieNorm,\n  selectNotRecFood,\n} from 'redux/dailyCalorie/dailyCalorieSlice';\nimport {\n  selectCurrentDate,\n  selectEatenProducts,\n} from 'redux/dailyFood/dailyFoodSlice';\nimport styles from './RightSideBar.module.scss';\n\nexport const RightSideBar = () => {\n  const notRecFood = useSelector(selectNotRecFood);\n  const calorieNorm = useSelector(selectCalorieNorm);\n  const currentDate = useSelector(selectCurrentDate);\n  const eatenProducts = useSelector(selectEatenProducts);\n\n  const consumed = eatenProducts.reduce((acc, item) => {\n    acc += item.calories;\n    return Math.round(acc);\n  }, 0);\n  const left = calorieNorm - consumed;\n  const interest = Math.round((consumed / calorieNorm) * 100);\n\n  return (\n    <>\n      <div className={styles.blockWrapper}>\n        <div>\n          <h2 className={styles.heading}>Summary for {currentDate}</h2>\n          <ul className={styles.list}>\n            <li className={styles.calorieItem}>\n              <span>Left</span>\n              <span>{left > 0 ? left : '000'} kcal </span>\n            </li>\n            <li className={styles.calorieItem}>\n              <span>Consumed</span>\n              <span\n                className={\n                  consumed > calorieNorm ? styles.warning : styles.norm\n                }\n              >\n                {consumed ? consumed : '000'} kcal\n              </span>\n            </li>\n            <li className={styles.calorieItem}>\n              <span>Daily rate</span>\n              <span>{calorieNorm ? calorieNorm : '000'} kcal</span>\n            </li>\n            <li className={styles.calorieItem}>\n              <span>n% of normal</span>\n              <span>{interest ? interest : '000'} %</span>\n            </li>\n          </ul>\n        </div>\n        <div>\n          <h2 className={styles.heading}>Food not recommended</h2>\n          <ul className={styles.foodList}>\n            {notRecFood && notRecFood.length > 0 ? (\n              notRecFood.map((el, i) => (\n                <li key={i}>\n                  <span>{el.en}</span>\n                </li>\n              ))\n            ) : (\n              <li>\n                <span>Your diet will be displayed here</span>\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n","import * as yup from 'yup';\n\nexport const loginSchema = yup.object({\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .min(6, 'Min number of characters is 6')\n    .required('Password is required'),\n});\n","import * as yup from 'yup';\n\nexport const registerSchema = yup.object({\n  name: yup\n    .string()\n    .min(3, 'Min number of characters is 6')\n    .max(15, 'Max number of characters is 15')\n    .required('Name is required'),\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .min(6, 'Min number of characters is 6')\n    .required('Password is required'),\n});\n","import * as yup from 'yup';\n\nexport const calorieSchema = yup.object({\n  height: yup.number().min(50).max(250).required(),\n  age: yup.number().min(1).max(100).required(),\n  currentWeight: yup.number().min(5).max(250).required(),\n  desiredWeight: yup.number().min(5).max(250).required(),\n  bloodType: yup.number().required(),\n});\n","import * as yup from 'yup';\n\nexport const newProductSchema = yup.object({\n  productName: yup.string().required(),\n  weight: yup.number().positive().required(),\n});\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getEatenProducts } from 'redux/dailyFood/dailyFoodOperations';\nimport { selectCurrentDate } from 'redux/dailyFood/dailyFoodSlice';\nimport { DailyCaloriesForm } from 'components/DailyCaloriesForm/DailyCaloriesForm';\nimport { RightSideBar } from 'components/RightSideBar/RightSideBar';\nimport styles from './CalculatorPage.module.scss';\n\nexport const CalculatorPage = () => {\n  const dispatch = useDispatch();\n  const currentDate = useSelector(selectCurrentDate);\n\n  useEffect(() => {\n    dispatch(getEatenProducts(currentDate));\n  }, [dispatch, currentDate]);\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className={styles.calculatorPage}>\n          <DailyCaloriesForm />\n        </div>\n      </div>\n      <div className={styles.SidebarSection}>\n        <div className={styles.SidebarWrap}>\n          <RightSideBar />\n        </div>\n      </div>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"calculatorPage\":\"CalculatorPage_calculatorPage__TGglj\",\"SidebarSection\":\"CalculatorPage_SidebarSection__uLqNj\",\"SidebarWrap\":\"CalculatorPage_SidebarWrap__6bJ4T\"};"],"names":["Button","size","mainStyle","type","disabled","children","handleClick","onClick","className","clsx","styles","getCalorieAuthApi","calcParams","axios","response","data","getCalorieApi","getCalorieAuth","createAsyncThunk","thunkAPI","result","rejectWithValue","message","getCalorie","DailyCaloriesForm","handleModalOpen","InputField","label","value","name","onChange","onBlur","required","RadioButton","id","htmlFor","dispatch","useDispatch","navigate","useNavigate","authStatus","useSelector","selectAuthStatus","initialValues","height","age","currentWeight","desiredWeight","bloodType","validateOnBlur","validationSchema","calorieSchema","onSubmit","values","actions","allValue","routes","errors","touched","handleChange","handleBlur","handleSubmit","RightSideBar","notRecFood","selectNotRecFood","calorieNorm","selectCalorieNorm","currentDate","selectCurrentDate","consumed","selectEatenProducts","reduce","acc","item","calories","Math","round","left","interest","length","map","el","i","en","loginSchema","yup","email","password","min","registerSchema","max","productName","weight","positive","CalculatorPage","useEffect","getEatenProducts"],"sourceRoot":""}