{"version":3,"file":"static/js/232.64db9719.chunk.js","mappings":"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","sources":["webpack://slim-mom-frontend/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","helpers/validation/loginSchema.js","helpers/validation/registerSchema.js","helpers/validation/calorieSchema.js","helpers/validation/newProductSchema.js","webpack://slim-mom-frontend/./src/components/LoginForm/LoginForm.module.scss?1c6d","components/LoginForm/LoginForm.jsx","webpack://slim-mom-frontend/./src/pages/LoginPage/LoginPage.module.scss?8fcb","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__JBBzO\",\"active\":\"Button_active__iTrrO Button_button__JBBzO\",\"primary\":\"Button_primary__9MLUH Button_button__JBBzO\",\"disable\":\"Button_disable__AF92d Button_button__JBBzO\",\"small\":\"Button_small__jToKs\",\"large\":\"Button_large__cizxk\"};","import clsx from 'clsx';\n\nimport styles from './Button.module.scss';\n\nexport const Button = ({\n  size = 'small',\n  mainStyle,\n  type,\n  disabled = false,\n  children,\n  handleClick,\n}) => {\n  return (\n    <button\n      disabled={disabled}\n      type={type}\n      onClick={handleClick}\n      className={clsx(styles[size], styles[mainStyle])}\n    >\n      {children}\n    </button>\n  );\n};\n","import * as yup from 'yup';\n\nexport const loginSchema = yup.object({\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .min(6, 'Min number of characters is 6')\n    .required('Password is required'),\n});\n","import * as yup from 'yup';\n\nexport const registerSchema = yup.object({\n  name: yup\n    .string()\n    .min(3, 'Min number of characters is 6')\n    .max(15, 'Max number of characters is 15')\n    .required('Name is required'),\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .min(6, 'Min number of characters is 6')\n    .required('Password is required'),\n});\n","import * as yup from 'yup';\n\nexport const calorieSchema = yup.object({\n  height: yup.number().min(50).max(250).required(),\n  age: yup.number().min(1).max(100).required(),\n  currentWeight: yup.number().min(5).max(250).required(),\n  desiredWeight: yup.number().min(5).max(250).required(),\n  bloodType: yup.number().required(),\n});\n","import * as yup from 'yup';\n\nexport const newProductSchema = yup.object({\n  productName: yup.string().required(),\n  weight: yup.number().positive().required(),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"LoginForm_heading__ST5SC\",\"formWrapper\":\"LoginForm_formWrapper__isp4j\",\"label\":\"LoginForm_label__RGIMj\",\"text\":\"LoginForm_text__B2UU8\",\"input\":\"LoginForm_input__7Ngg7\",\"buttonWrapper\":\"LoginForm_buttonWrapper__GyBKJ\",\"error\":\"LoginForm_error__cEL5X\"};","import { useNavigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Button } from 'components/Button/Button';\nimport styles from './LoginForm.module.scss';\nimport { routes } from 'utils/routes';\nimport { loginSchema } from 'helpers/validation';\nimport { loginUser } from 'redux/auth/authOperations';\nimport { Loader } from 'components/Loader/Loader';\nimport { clearError } from 'redux/auth/authSlice';\n\nexport const LoginForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(state => state.auth.isLoading);\n\n  const { handleSubmit, errors, handleChange, values, submitCount } = useFormik(\n    {\n      initialValues: {\n        email: '',\n        password: '',\n      },\n      onSubmit: values => {\n        dispatch(clearError());\n        dispatch(loginUser(values));\n      },\n      validationSchema: loginSchema,\n    }\n  );\n\n  return (\n    <>\n      <p className={styles.heading}>Log in</p>\n      {isLoading && <Loader />}\n      <form onSubmit={handleSubmit} className={styles.caloriesForm}>\n        <div className={styles.formWrapper}>\n          <label className={styles.labelText}>\n            <span className={styles.text}>Email</span>\n            <div className={styles.formContainerMain}>\n              <div className={styles.formContainerLeft}>\n                <div className={styles.labelContainer}>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    className={styles.input}\n                    onChange={handleChange}\n                    value={values.email}\n                  />\n                </div>\n              </div>\n            </div>\n            {submitCount > 0 && errors.email && (\n              <span className={styles.error}>{errors.email}</span>\n            )}\n          </label>\n          <label className={styles.label}>\n            <span className={styles.text}>Password</span>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className={styles.input}\n              onChange={handleChange}\n              value={values.password}\n            />\n            {submitCount > 0 && errors.password && (\n              <span className={styles.error}>{errors.password}</span>\n            )}\n          </label>\n        </div>\n        <div className={styles.buttonWrapper}>\n          <Button\n            type=\"submit\"\n            mainStyle=\"active\"\n          >\n            Log in\n          </Button>\n          <Button\n            type=\"button\"\n            mainStyle=\"primary\"\n            handleClick={e => {\n              e.preventDefault();\n              navigate(routes.register, { replace: true });\n            }}\n          >\n            Register\n          </Button>\n        </div>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"LoginPage_formWrapper__ppMsG\",\"loginPage\":\"LoginPage_loginPage__9b87u\"};","import { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport Notiflix from 'notiflix';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\nimport styles from './LoginPage.module.scss';\n\nexport const LoginPage = () => {\n  const error = useSelector(state => state.auth.error);\n\n  useEffect(() => {\n    if (error && error !== \"User doesn't exist\") {\n      Notiflix.Notify.failure(`Email or password is wrong. Try again`);\n    }\n  }, [error]);\n\n  return (\n    <div className={styles.loginPage}>\n      <div className=\"container\">\n        <div className={styles.formWrapper}>\n          <LoginForm />\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":["Button","size","mainStyle","type","disabled","children","handleClick","onClick","className","clsx","styles","loginSchema","yup","email","required","password","min","registerSchema","name","max","calorieSchema","height","age","currentWeight","desiredWeight","bloodType","productName","weight","positive","LoginForm","navigate","useNavigate","dispatch","useDispatch","isLoading","useSelector","state","auth","useFormik","initialValues","onSubmit","values","clearError","loginUser","validationSchema","handleSubmit","errors","handleChange","submitCount","Loader","onChange","value","e","preventDefault","routes","replace","LoginPage","error","useEffect","Notiflix"],"sourceRoot":""}