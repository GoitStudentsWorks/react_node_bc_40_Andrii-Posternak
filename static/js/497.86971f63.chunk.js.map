{"version":3,"file":"static/js/497.86971f63.chunk.js","mappings":"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","sources":["webpack://slim-mom-frontend/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","webpack://slim-mom-frontend/./src/components/DailyCaloriesForm/DailyCaloriesForm.module.scss?c79a","services/dailyCalorieApi.js","redux/dailyCalorie/dailyCalorieOperations.js","components/DailyCaloriesForm/DailyCaloriesForm.jsx","helpers/validation/loginSchema.js","helpers/validation/registerSchema.js","helpers/validation/calorieSchema.js","helpers/validation/newProductSchema.js","webpack://slim-mom-frontend/./src/pages/MainPage/MainPage.module.scss?b09f","webpack://slim-mom-frontend/./src/components/Modal/Modal.module.scss?b72d","components/Modal/Modal.jsx","pages/MainPage/MainPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__JBBzO\",\"active\":\"Button_active__iTrrO Button_button__JBBzO\",\"primary\":\"Button_primary__9MLUH Button_button__JBBzO\",\"disable\":\"Button_disable__AF92d Button_button__JBBzO\",\"small\":\"Button_small__jToKs\",\"large\":\"Button_large__cizxk\"};","import clsx from 'clsx';\n\nimport styles from './Button.module.scss';\n\nexport const Button = ({\n  size = 'small',\n  mainStyle,\n  type,\n  disabled = false,\n  children,\n  handleClick,\n}) => {\n  return (\n    <button\n      disabled={disabled}\n      type={type}\n      onClick={handleClick}\n      className={clsx(styles[size], styles[mainStyle])}\n    >\n      {children}\n    </button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"caloriesForm\":\"DailyCaloriesForm_caloriesForm__CjEzo\",\"caloriesPadding\":\"DailyCaloriesForm_caloriesPadding__l6bi1\",\"labelText\":\"DailyCaloriesForm_labelText__G+pBd\",\"labelContainer\":\"DailyCaloriesForm_labelContainer__lo97o\",\"formContainerF\":\"DailyCaloriesForm_formContainerF__z+3qH\",\"formContainerS\":\"DailyCaloriesForm_formContainerS__-eZFl\",\"caloriesFormErrorContainer\":\"DailyCaloriesForm_caloriesFormErrorContainer__BGDXs\",\"caloriesFormError\":\"DailyCaloriesForm_caloriesFormError__h-xJl\",\"radioButtonContainer\":\"DailyCaloriesForm_radioButtonContainer__91ucI\",\"radioButtonList\":\"DailyCaloriesForm_radioButtonList__iE1rE\",\"check\":\"DailyCaloriesForm_check__JP1e-\",\"form_button\":\"DailyCaloriesForm_form_button__+DDQQ\",\"formContainerMain\":\"DailyCaloriesForm_formContainerMain__+kjzo\",\"formContainerLeft\":\"DailyCaloriesForm_formContainerLeft__kDDqU\",\"formContainerRight\":\"DailyCaloriesForm_formContainerRight__r2vV7\",\"radioButton\":\"DailyCaloriesForm_radioButton__LfytD\"};","import axios from 'axios';\n\nexport const getCalorieAuthApi = async calcParams => {\n  const response = await axios.post('/calories/auth', calcParams);\n  return response.data;\n};\n\nexport const getCalorieApi = async calcParams => {\n  const response = await axios.post('/calories', calcParams);\n  return response.data;\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { getCalorieAuthApi, getCalorieApi } from 'services/dailyCalorieApi';\n\nexport const getCalorieAuth = createAsyncThunk(\n  'calorie/getCalorieAuth',\n  async (calcParams, thunkAPI) => {\n    try {\n      const result = await getCalorieAuthApi(calcParams);\n\n      return result;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const getCalorie = createAsyncThunk(\n  'calorie/getCalorie',\n  async (calcParams, thunkAPI) => {\n    try {\n      const result = await getCalorieApi(calcParams);\n\n      return result;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n","import { Formik, Form, Field } from 'formik';\nimport { PersistFormikValues } from 'formik-persist-values';\n\nimport styles from './DailyCaloriesForm.module.scss';\nimport { calorieSchema } from 'helpers/validation';\nimport { Button } from 'components/Button/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAuthStatus } from 'redux/auth/authSlice';\nimport { getCalorie } from 'redux/dailyCalorie/dailyCalorieOperations';\nimport { getCalorieAuth } from 'redux/dailyCalorie/dailyCalorieOperations';\nimport { useNavigate } from 'react-router-dom';\nimport { routes } from 'utils/routes';\n\nexport const DailyCaloriesForm = ({ handleModalOpen }) => {\n  const InputField = ({ label, type, value, name, onChange, onBlur }) => (\n    <label>\n      <Field\n        required\n        type={type}\n        value={value}\n        name={name}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n      <div className={styles.labelText}>{label}</div>\n    </label>\n  );\n\n  const RadioButton = ({ name, value, id, onChange, onBlur }) => (\n    <li>\n      <Field\n        type=\"radio\"\n        value={value}\n        name={name}\n        id={id}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n      <label htmlFor={id}>{value}</label>\n      <div className={styles.check}>\n        <div className={styles.inside}></div>\n      </div>\n    </li>\n  );\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const authStatus = useSelector(selectAuthStatus);\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          height: '',\n          age: '',\n          currentWeight: '',\n          desiredWeight: '',\n          bloodType: '',\n        }}\n        validateOnBlur\n        validationSchema={calorieSchema}\n        onSubmit={(values, actions) => {\n          const bloodType = +values.bloodType;\n          const allValue = { ...values, bloodType };\n\n          if (authStatus) {\n            dispatch(getCalorieAuth(allValue));\n            navigate(routes.diary);\n          } else {\n            dispatch(getCalorie(allValue));\n            handleModalOpen();\n          }\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => (\n          <Form\n            className={\n              authStatus\n                ? styles.caloriesForm\n                : `${styles.caloriesForm} ${styles.caloriesPadding}`\n            }\n            onSubmit={handleSubmit}\n          >\n            <h1>Calculate your daily calorie intake right now</h1>\n            <div className={styles.formContainerMain}>\n              <div className={styles.formContainerLeft}>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Height *\"\n                    type=\"text\"\n                    name={'height'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.height}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.height && errors.height && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.height}\n                      </p>\n                    )}\n                  </div>\n                </div>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Age *\"\n                    type=\"text\"\n                    name={'age'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.age}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.age && errors.age && (\n                      <p className={styles.caloriesFormError}>{errors.age}</p>\n                    )}\n                  </div>\n                </div>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Current weight *\"\n                    type=\"text\"\n                    name={'currentWeight'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.currentWeight}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.currentWeight && errors.currentWeight && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.currentWeight}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className={styles.formContainerRight}>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Desired weight *\"\n                    type=\"text\"\n                    name={'desiredWeight'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.desiredWeight}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.desiredWeight && errors.desiredWeight && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.desiredWeight}\n                      </p>\n                    )}\n                  </div>\n                </div>\n                <div className={styles.radioButtonContainer}>\n                  <h3>Blood type *</h3>\n\n                  <ul className={styles.radioButtonList}>\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"1\"\n                      id=\"1-radio-button\"\n                    />\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"2\"\n                      id=\"2-radio-button\"\n                    />\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"3\"\n                      id=\"3-radio-button\"\n                    />\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"4\"\n                      id=\"4-radio-button\"\n                    />\n                  </ul>\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.bloodType && errors.bloodType && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.bloodType}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className={styles.form_button}>\n              <Button size={'large'} mainStyle={'active'} type={'submit'}>\n                Start losing weight\n              </Button>\n            </div>\n\n            <PersistFormikValues name=\"calc-form\" />\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","import * as yup from 'yup';\n\nexport const loginSchema = yup.object({\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .min(6, 'Min number of characters is 6')\n    .required('Password is required'),\n});\n","import * as yup from 'yup';\n\nexport const registerSchema = yup.object({\n  name: yup\n    .string()\n    .min(3, 'Min number of characters is 6')\n    .max(15, 'Max number of characters is 15')\n    .required('Name is required'),\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .min(6, 'Min number of characters is 6')\n    .required('Password is required'),\n});\n","import * as yup from 'yup';\n\nexport const calorieSchema = yup.object({\n  height: yup.number().min(50).max(250).required(),\n  age: yup.number().min(1).max(100).required(),\n  currentWeight: yup.number().min(5).max(250).required(),\n  desiredWeight: yup.number().min(5).max(250).required(),\n  bloodType: yup.number().required(),\n});\n","import * as yup from 'yup';\n\nexport const newProductSchema = yup.object({\n  productName: yup.string().required(),\n  weight: yup.number().positive().required(),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"mainPage\":\"MainPage_mainPage__6gmrg\"};","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Modal_overlay__b+zEz\",\"btnContainer\":\"Modal_btnContainer__kNAnL\",\"modal\":\"Modal_modal__yEgVW\",\"title\":\"Modal_title__KuCmT\",\"modalContainer\":\"Modal_modalContainer__Xtw+V\",\"icon\":\"Modal_icon__jhXbv\",\"closeIcon\":\"Modal_closeIcon__PA6+Y\",\"caloriesContainer\":\"Modal_caloriesContainer__hfkPX\",\"calories\":\"Modal_calories__nbcp9\",\"caloriesText\":\"Modal_caloriesText__ofw+B\",\"secondaryTitle\":\"Modal_secondaryTitle__S7ktB\",\"btn\":\"Modal_btn__eZPu0\",\"list\":\"Modal_list__BMemH\",\"listItem\":\"Modal_listItem__Fa0Gg\",\"btnWrap\":\"Modal_btnWrap__jFJjm\"};","import scss from './Modal.module.scss';\nimport { Button } from 'components/Button/Button';\nimport { GrClose } from 'react-icons/gr';\nimport { createPortal } from 'react-dom';\n\nimport { useEffect } from 'react';\nimport { useWindowSize } from 'react-use';\nimport { useSelector } from 'react-redux';\nimport {\n  selectCalorieNorm,\n  selectIsLoadingCalorie,\n  selectNotRecFood,\n} from 'redux/dailyCalorie/dailyCalorieSlice';\nimport { Loader } from 'components/Loader/Loader';\nimport { routes } from 'utils/routes';\nimport { NavLink } from 'react-router-dom';\nimport { TbArrowBack } from 'react-icons/tb';\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onClose, isModalOpen }) => {\n  const calorieNorm = useSelector(selectCalorieNorm);\n  const notRecFood = useSelector(selectNotRecFood);\n  const isLoading = useSelector(selectIsLoadingCalorie);\n\n  const { width } = useWindowSize();\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const onModalClose = event => {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    };\n    document.body.style.overflow = 'hidden';\n    window.addEventListener('keydown', onModalClose);\n\n    return () => {\n      document.body.style.overflow = 'unset';\n      window.removeEventListener('keydown', onModalClose);\n    };\n  }, [onClose]);\n\n  return createPortal(\n    <>\n      <div className={scss.overlay} onClick={handleBackdropClick}>\n        <div className={scss.modal}>\n          {width < 768 ? (\n            <div className={scss.btnContainer}>\n              <TbArrowBack className={scss.icon} onClick={() => onClose()} />\n            </div>\n          ) : (\n            <GrClose className={scss.closeIcon} onClick={() => onClose()} />\n          )}\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <>\n              <div className={scss.modalContainer}>\n                <h2 className={scss.title}>\n                  Your recommended daily calorie intake is\n                </h2>\n                <div className={scss.caloriesContainer}>\n                  <span className={scss.calories}>\n                    {calorieNorm}\n\n                    <span className={scss.caloriesText}> kcal</span>\n                  </span>\n                </div>\n                <div className={scss.listCenter}>\n                  <h2 className={scss.secondaryTitle}>\n                    Foods you should not eat\n                  </h2>\n                  <ul className={scss.list}>\n                    {notRecFood.length > 0 &&\n                      notRecFood.map((el, i) => (\n                        <li className={scss.listItem} key={i}>\n                          {i + 1}. {el.en}\n                        </li>\n                      ))}\n                  </ul>\n                  <div className={scss.btnWrap}>\n                    <NavLink to={routes.login}>\n                      <Button\n                        size={'large'}\n                        mainStyle={'active'}\n                        type={'button'}\n                      >\n                        Start losing weight\n                      </Button>\n                    </NavLink>\n                  </div>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </>,\n    modalRoot\n  );\n};\n","import { DailyCaloriesForm } from 'components/DailyCaloriesForm/DailyCaloriesForm';\nimport styles from './MainPage.module.scss';\nimport { useState } from 'react';\nimport { Modal } from 'components/Modal/Modal';\n\nexport const MainPage = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleModalOpen = () => {\n    setIsModalOpen(true);\n  };\n  const onClose = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <div className={styles.mainPage}>\n      <div className=\"container\">\n      <DailyCaloriesForm handleModalOpen={handleModalOpen} />\n      {isModalOpen && <Modal onClose={onClose} isModalOpen={isModalOpen} />}\n    </div>\n    </div>\n  );\n};\n"],"names":["Button","size","mainStyle","type","disabled","children","handleClick","onClick","className","clsx","styles","getCalorieAuthApi","calcParams","axios","response","data","getCalorieApi","getCalorieAuth","createAsyncThunk","thunkAPI","result","rejectWithValue","message","getCalorie","DailyCaloriesForm","handleModalOpen","InputField","label","value","name","onChange","onBlur","required","RadioButton","id","htmlFor","dispatch","useDispatch","navigate","useNavigate","authStatus","useSelector","selectAuthStatus","initialValues","height","age","currentWeight","desiredWeight","bloodType","validateOnBlur","validationSchema","calorieSchema","onSubmit","values","actions","allValue","routes","errors","touched","handleChange","handleBlur","handleSubmit","loginSchema","yup","email","password","min","registerSchema","max","productName","weight","positive","modalRoot","document","querySelector","Modal","onClose","calorieNorm","isModalOpen","selectCalorieNorm","notRecFood","selectNotRecFood","isLoading","selectIsLoadingCalorie","width","useWindowSize","useEffect","onModalClose","event","code","body","style","overflow","window","addEventListener","removeEventListener","createPortal","scss","currentTarget","target","Loader","length","map","el","i","en","to","MainPage","useState","setIsModalOpen"],"sourceRoot":""}